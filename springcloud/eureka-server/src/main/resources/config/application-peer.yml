spring:
  profiles: peer1
  application:
    name: eureka-server
  security:
    user:
      name: admin
      password: admin
server:
  port: 8761
eureka:
  instance:
    hostname: peer1
    preferIpAddress: true
    instanceId: ${spring.application.name}:${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://admin:admin@peer1:8761/eureka/,http://admin:admin@peer2:8762/eureka/
  server:
    enableSelfPreservation: false
    waitTimeInMsWhenSyncEmpty: 0

---
spring:
  profiles: peer2
  application:
    name: eureka-server
  security:
   user:
     name: admin
     password: admin
server:
  port: 8762
eureka:
  instance:
    hostname: peer2
    preferIpAddress: true
    instanceId: ${spring.application.name}:${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://admin:admin@peer1:8761/eureka/,http://admin:admin@peer2:8762/eureka/
  server:
    enableSelfPreservation: false
    waitTimeInMsWhenSyncEmpty: 0

---
spring:
  profiles: peer3
  application:
    name: eureka-server
  security:
   user:
     name: admin
     password: admin
server:
  port: 8763
eureka:
  instance:
    hostname: peer3
    preferIpAddress: true
    instanceId: ${spring.application.name}:${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://admin:admin@peer3:8761/eureka/,http://admin:admin@peer1:8761/eureka/
  server:
    enableSelfPreservation: false
    waitTimeInMsWhenSyncEmpty: 0
